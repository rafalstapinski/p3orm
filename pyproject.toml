[tool.poetry]
name = "p3orm"
version = "0.6.3"
description = "Utilitarian Python ORM for Postgres/SQLite, backed by asyncpg/aiosqlite, Pydantic, and PyPika"
authors = ["Rafal Stapinski <stapinskirafal@gmail.com>"]
keywords = ["postgres", "sqlite", "async", "orm"]
readme = "README.md"
license = "MIT"
homepage = "https://rafalstapinski.github.io/p3orm"
repository = "https://github.com/rafalstapinski/p3orm"

[tool.poetry.dependencies]
python = ">=3.8"
pypika = "^0.48.9"
pydantic = "^1.10.7"
asyncpg = {version = "^0.27.0", optional = true}
aiosqlite = {version = "^0.18.0", optional = true}

[tool.poetry.extras]
sqlite = ["aiosqlite"]
postgres = ["asyncpg"]

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
pylint = "^2.17.2"
isort = "^5.12.0"
pytest-postgresql = "^4.1.1"
psycopg2-binary = "^2.9.6"
pytest-asyncio = "^0.21.0"
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.6"
aiosqlite = "^0.18.0"
asyncpg = "^0.27.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
known_local_folder = ["test"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.black]
line-length = 120

[tool.pylint.messages_control]
disable = "all"
enable = "unused-import"
