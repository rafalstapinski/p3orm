name: Test

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
    
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      # Check out
      - uses: actions/checkout@v2

      # Set up Python
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      # Install postgresql
      - run: |
          sudo apt-get remove sqlite3 -y
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg ${{ matrix.postgres-version }}" > /etc/apt/sources.list.d/pgdg.list'
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "Package: *" > /etc/apt/preferences.d/psql'
          sudo sh -c 'echo "Pin: release c=${{ matrix.poxtgresql-version }}" >> /etc/apt/preferences.d/psql'
          sudo sh -c 'echo "Pin-Priority: 1000" >> /etc/apt/preferences.d/psql'
          sudo apt-get update -o Dir::Etc::sourcelist="/etc/apt/sources.list.d/pgdg.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
          sudo apt install -y postgresql-${{ matrix.postgres-version }} postgresql-client-${{ matrix.postgres-version }}
  
      # Install SQLite 3.37
      - run: |
          sudo apt install build-essential -y
          wget https://www.sqlite.org/2022/sqlite-autoconf-3370200.tar.gz
          tar xvfz sqlite-autoconf-3370200.tar.gz
          sudo mv sqlite-autoconf-3370200 /opt/sqlite3
          cd /opt/sqlite3
          ./configure --prefix=/usr
          make -j 2
          sudo make install
          ls /opt/sqlite3

      # Check sqlite version
      - run: sqlite3 --version
      
      # Install poetry
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.12"

      # Install deps
      - run: poetry install

      # Check SQLite version used by Python
      - run: poetry run python -c "import sqlite3; print(sqlite3.sqlite_version)"

      # Test SQLite
      - run: poetry run pytest -s test/sqlite

      # Test Postgres
      - run: poetry run pytest -s test/postgres

      # isort
      - run: poetry run isort --sp pyproject.toml --check .

      # black
      - run: poetry run black --config pyproject.toml --check .

      # pylint
      - run: poetry run pylint p3orm/

      # check versions match
      - run: poetry run python scripts/assert_package_versions_match.py
