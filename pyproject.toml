[tool.poetry]
name = "p3orm"
version = "0.10.3"
description = "Utilitarian Python ORM for Postgres/SQLite, backed by asyncpg/aiosqlite, Pydantic, and PyPika"
authors = ["Rafal Stapinski <stapinskirafal@gmail.com>"]
keywords = ["postgres", "sqlite", "async", "orm"]
readme = "README.md"
license = "MIT"
homepage = "https://rafalstapinski.github.io/p3orm"
repository = "https://github.com/rafalstapinski/p3orm"
packages = [
  {include = "p3orm"},
  {include = "p3orm/py.typed"},
]

[tool.poetry.dependencies]
python = "^3.9"
PyPika = "^0.48.8"
asyncpg = {version = "^0.26.0", optional = true}
aiosqlite = {version = "^0.17.0", optional = true}
pydantic = "^2.3.0"
typing-extensions = "^4.8.0"

[tool.poetry.dev-dependencies]
flake8 = "^4.0.1"
pylint = "^2.11.1"
isort = "^5.9.3"
pytest-postgresql = "3.1.3"
psycopg2-binary = "^2.9.3"
pytest-asyncio = "^0.18.1"
mkdocs = "^1.2.3"
mkdocs-material = "^8.2.1"
asyncpg = "^0.26.0"
aiosqlite = "^0.17.0"
elastic-apm = "^6.11.0"
structlog = "^22.1.0"

[tool.poetry.extras]
sqlite = ["aiosqlite"]
postgres = ["asyncpg"]

[tool.poetry.group.dev.dependencies]
black = "^23.9.0"
tomli = "^2.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
known_local_folder = ["test"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.black]
line-length = 120

[tool.pylint.messages_control]
disable = "all"
enable = "unused-import"
